{"pageProps":{"note":{"id":"30me5ye70hp7yvxy5rbc2kt","title":"C#","desc":"General C# Notes","updated":1648058105831,"created":1648058105832,"custom":{},"fname":"devnotes.c#","type":"note","vault":{"fsPath":"vault"},"contentHash":"42d46972c11b95534c04bf0ed89c666f","links":[],"anchors":{"general-info":{"type":"header","text":"General Info","value":"general-info","line":7,"column":0,"depth":2},"trycatch-exceptions":{"type":"header","text":"Try/Catch Exceptions","value":"trycatch-exceptions","line":9,"column":0,"depth":2},"unary-operators":{"type":"header","text":"Unary Operators","value":"unary-operators","line":34,"column":0,"depth":2},"increment-operators":{"type":"header","text":"Increment Operators","value":"increment-operators","line":40,"column":0,"depth":2},"tryparse":{"type":"header","text":"TryParse","value":"tryparse","line":44,"column":0,"depth":2},"equals":{"type":"header","text":".Equals()","value":"equals","line":56,"column":0,"depth":2},"ternary-operator-if-statements":{"type":"header","text":"Ternary Operator If Statements","value":"ternary-operator-if-statements","line":60,"column":0,"depth":2}},"children":["8e9p84ep4knjjbz98gbyx7x","gme8nq5edv12pfupo16brtb","knx71fge4dbtpzvydbob9h6","owuuzurikuxv6vrevlih78w"],"parent":"lcTujcWsxBfPEpzP49YbQ","data":{}},"body":"<h1 id=\"c\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#c\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>C#</h1>\n<h2 id=\"general-info\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#general-info\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>General Info</h2>\n<h2 id=\"trycatch-exceptions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#trycatch-exceptions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Try/Catch Exceptions</h2>\n<pre class=\"language-csharp\"><code class=\"language-csharp\">        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> input <span class=\"token operator\">=</span> Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> parsedInput <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>parsedInput <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatException</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Format exception please enter the correct type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OverflowException</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Overflow Exception!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I dont know all the exceptions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"unary-operators\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#unary-operators\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Unary Operators</h2>\n<p><code>num2 = -num3</code> negative operator</p>\n<p><code>!</code> logical negation operator</p>\n<h2 id=\"increment-operators\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#increment-operators\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Increment Operators</h2>\n<p><code>num++</code> or <code>++num</code></p>\n<h2 id=\"tryparse\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#tryparse\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>TryParse</h2>\n<pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> numberAsString <span class=\"token operator\">=</span> <span class=\"token string\">\"128\"</span>\n<span class=\"token keyword\">int</span> parsedValue\n<span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryParse</span><span class=\"token punctuation\">(</span>numberAsString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> parsedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">)</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parsing Successful - number is \"</span> <span class=\"token operator\">+</span> parsedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> \n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parsing Failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"equals\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#equals\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>.Equals()</h2>\n<p>Determines whether two object instances are equal.</p>\n<h2 id=\"ternary-operator-if-statements\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#ternary-operator-if-statements\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Ternary Operator If Statements</h2>\n<pre class=\"language-csharp\"><code class=\"language-csharp\">stateOfMatter <span class=\"token operator\">=</span> temp <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token punctuation\">?</span> <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> temp <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> <span class=\"token string\">\"solid\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"liquid\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/DevNotes/notes/8e9p84ep4knjjbz98gbyx7x\">C# Classes</a></li>\n<li><a href=\"/DevNotes/notes/gme8nq5edv12pfupo16brtb\">Datatypes</a></li>\n<li><a href=\"/DevNotes/notes/knx71fge4dbtpzvydbob9h6\">Objects</a></li>\n<li><a href=\"/DevNotes/notes/owuuzurikuxv6vrevlih78w\">XML Comments</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}