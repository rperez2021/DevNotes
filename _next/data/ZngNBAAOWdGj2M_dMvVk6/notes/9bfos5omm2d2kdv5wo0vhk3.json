{"pageProps":{"note":{"id":"9bfos5omm2d2kdv5wo0vhk3","title":"ES2017","desc":"ES2017 Notes","updated":1649283140964,"created":1649274214843,"custom":{},"fname":"devnotes.javascript.es2017","type":"note","vault":{"fsPath":"vault"},"contentHash":"2370c15704a6b5c68efbd869a9ff90e1","links":[],"anchors":{"list-of-changes":{"type":"header","text":"List of Changes","value":"list-of-changes","line":7,"column":0,"depth":2},"async-functions":{"type":"header","text":"Async Functions","value":"async-functions","line":17,"column":0,"depth":3},"why-they-are-useful":{"type":"header","text":"Why they are useful","value":"why-they-are-useful","line":23,"column":0,"depth":4},"quick-example":{"type":"header","text":"Quick Example","value":"quick-example","line":29,"column":0,"depth":4},"string-padding":{"type":"header","text":"String Padding","value":"string-padding","line":58,"column":0,"depth":3},"objectvalues":{"type":"header","text":"Object.values()","value":"objectvalues","line":82,"column":0,"depth":3},"objectentries":{"type":"header","text":"Object.entries()","value":"objectentries","line":99,"column":0,"depth":3},"getownpropertydescriptors":{"type":"header","text":"getOwnPropertyDescriptors()","value":"getownpropertydescriptors","line":116,"column":0,"depth":3},"in-what-way-is-this-useful":{"type":"header","text":"In what way is this useful?","value":"in-what-way-is-this-useful","line":133,"column":0,"depth":4},"trailing-commas":{"type":"header","text":"Trailing Commas","value":"trailing-commas","line":182,"column":0,"depth":3},"shared-memory-and-atomics":{"type":"header","text":"Shared Memory and Atomics","value":"shared-memory-and-atomics","line":196,"column":0,"depth":3},"source":{"type":"header","text":"Source","value":"source","line":204,"column":0,"depth":2}},"children":[],"parent":"cOSLT6ncEiScjLx1bEQKH","data":{}},"body":"<h1 id=\"es2017\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#es2017\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>ES2017</h1>\n<h2 id=\"list-of-changes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#list-of-changes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>List of Changes</h2>\n<ul>\n<li>Async functions</li>\n<li>String padding</li>\n<li><code>Object.values()</code></li>\n<li><code>Object.entries()</code></li>\n<li><code>Object.getOwnPropertyDescriptors()</code></li>\n<li>Trailing commas in function parameter lists and calls</li>\n<li>Shared memory and atomics</li>\n</ul>\n<h3 id=\"async-functions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#async-functions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Async Functions</h3>\n<p>ES2017 introduced the concept of async functions, and it’s the most important change introduced in this ECMAScript edition.</p>\n<p>Async functions are a combination of promises and generators to reduce the boilerplate around promises, and the “don’t break the chain” limitation of chaining promises.</p>\n<h4 id=\"why-they-are-useful\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#why-they-are-useful\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Why they are useful</h4>\n<p>It’s a higher level abstraction over promises.</p>\n<p>When Promises were introduced in ES6, they were meant to solve a problem with asynchronous code, and they did, but over the 2 years that separated ES6 and ES2017, it was clear that promises could not be the final solution. Promises were introduced to solve the famous callback hell problem, but they introduced complexity on their own, and syntax complexity. They were good primitives around which a better syntax could be exposed to the developers: enter async functions.</p>\n<h4 id=\"quick-example\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#quick-example\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Quick Example</h4>\n<p>A quick example\nCode making use of asynchronous functions can be written as</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">doSomethingAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I did something'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword control-flow\">await</span> <span class=\"token function\">doSomethingAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>The above code will print the following to the browser console:</p>\n<pre class=\"language-console\"><code class=\"language-console\">Before\nAfter\nI did something //after 3s\n</code></pre>\n<h3 id=\"string-padding\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#string-padding\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>String Padding</h3>\n<p>The purpose of string padding is to add characters to a string, so it reaches a specific length.</p>\n<p><code>padStart(targetLength [, padString])</code></p>\n<p><code>padEnd(targetLength [, padString])</code></p>\n<p>Sample usage:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘test’</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘ test’</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘    test’</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> ‘abcd’<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘abcdtest’</span>\n\n<span class=\"token function\">padEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padEnd</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//\t‘test’</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padEnd</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘test ‘</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padEnd</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// ‘test    ‘</span>\n‘test’<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">padEnd</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// ‘abcd’)\t‘testabcd’</span>\n</code></pre>\n<h3 id=\"objectvalues\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#objectvalues\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Object.values()</h3>\n<p>This method returns an array containing all the object own property values.</p>\n<p>Usage:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fred'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">87</span> <span class=\"token punctuation\">}</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">values</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['Fred', 87]</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token comment\">// also works with arrays!:</span>\n\n<span class=\"token keyword\">const</span> people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Fred'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tony'</span><span class=\"token punctuation\">]</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">values</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['Fred', 'Tony']</span>\n</code></pre>\n<h3 id=\"objectentries\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#objectentries\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Object.entries()</h3>\n<p>This method returns an array containing all the object own properties, as an array of [key, value] pairs.</p>\n<p>Usage:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fred'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">87</span> <span class=\"token punctuation\">}</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">entries</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [['name', 'Fred'], ['age', 87]]</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token comment\">//also works with arrays:</span>\n\n<span class=\"token keyword\">const</span> people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Fred'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tony'</span><span class=\"token punctuation\">]</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">entries</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [['0', 'Fred'], ['1', 'Tony']]</span>\n</code></pre>\n<h3 id=\"getownpropertydescriptors\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#getownpropertydescriptors\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>getOwnPropertyDescriptors()</h3>\n<p>This method returns all own (non-inherited) properties descriptors of an object.</p>\n<p>Any object in JavaScript has a set of properties, and each of these properties has a descriptor.</p>\n<p>A descriptor is a set of attributes of a property, and it’s composed by a subset of the following:</p>\n<ul>\n<li>value: the value of the property</li>\n<li>writable: true the property can be changed</li>\n<li>get: a getter function for the property, called when the property is read</li>\n<li>set: a setter function for the property, called when the property is set to a value</li>\n<li>configurable: if false, the property cannot be removed nor any attribute can be changed, except its value</li>\n<li>enumerable: true if the property is enumerable</li>\n</ul>\n<p><code>Object.getOwnPropertyDescriptors(obj)</code> accepts an object, and returns an object with the set of descriptors.</p>\n<h4 id=\"in-what-way-is-this-useful\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#in-what-way-is-this-useful\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>In what way is this useful?</h4>\n<p>ES6 gave us <code>Object.assign()</code>, which copies all enumerable own properties from one or more objects, and return a new object.</p>\n<p>However there is a problem with that, because it does not correctly copies properties with non-default attributes.</p>\n<p>If an object for example has just a setter, it’s not correctly copied to a new object, using <code>Object.assign()</code>.</p>\n<p>For example with</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">set</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>newName<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>This won’t work:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">,</span> person1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>But this will work:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperties</span><span class=\"token punctuation\">(</span>person3<span class=\"token punctuation\">,</span>\n  <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getOwnPropertyDescriptors</span><span class=\"token punctuation\">(</span>person1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>As you can see with a simple console test:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">person1<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> <span class=\"token string\">'x'</span>\n<span class=\"token string\">\"x\"</span>\n\nperson2<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> <span class=\"token string\">'x'</span>\n\nperson3<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> <span class=\"token string\">'x'</span>\n<span class=\"token string\">\"x\"</span>\n</code></pre>\n<p>person2 misses the setter, it was not copied over.</p>\n<p>The same limitation goes for shallow cloning objects with <code>Object.create()</code>.</p>\n<h3 id=\"trailing-commas\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#trailing-commas\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Trailing Commas</h3>\n<p>This feature allows to have trailing commas in function declarations, and in functions calls:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">doSomething</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">var1<span class=\"token punctuation\">,</span> var2<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test2'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>This change will encourage developers to stop the ugly “comma at the start of the line” habit.</p>\n<h3 id=\"shared-memory-and-atomics\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#shared-memory-and-atomics\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Shared Memory and Atomics</h3>\n<p>WebWorkers are used to create multithreaded programs in the browser.</p>\n<p>They offer a messaging protocol via events. Since ES2017, you can create a shared memory array between web workers and their creator, using a <code>SharedArrayBuffer</code>.</p>\n<p>Since it’s unknown how much time writing to a shared memory portion takes to propagate, <strong>Atomics</strong> are a way to enforce that when reading a value, any kind of writing operation is completed.</p>\n<h2 id=\"source\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#source\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Source</h2>\n<p>Most of these notes are copied from <a href=\"https://flaviocopes.com/es2017/\">this site</a></p>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}