{"pageProps":{"note":{"id":"wGXbodJIgcEVOuiVmXxEB","title":"Strings","desc":"Notes on Python Strings","updated":1645640398112,"created":1645635471771,"custom":{},"fname":"devnotes.python.datatypes.strings","type":"note","vault":{"fsPath":"vault"},"contentHash":"1d105902635ab6d786b0015d49bb6dc1","links":[],"anchors":{"general-notes":{"type":"header","text":"General Notes","value":"general-notes","line":7,"column":0,"depth":2}},"children":[],"parent":"lYnkSS5QyZPtmyqM38kP8","data":{}},"body":"<h1 id=\"strings\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#strings\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Strings</h1>\n<h2 id=\"general-notes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#general-notes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>General Notes</h2>\n<p>Triple quotes <code>'''</code> allow you to make multiline strings.</p>\n<p>You can use [] to get a specific letter of a strings.</p>\n<p>You can check for string partials with <code>in</code></p>\n<p>Strings are immutable so any changes with methods must be reassigned for example:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> spam <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> spam<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"HELLO WORLD!\"</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> spam\n<span class=\"token string\">\"Hello World!\"</span> <span class=\"token comment\"># see how the value never changed. </span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> spam <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># here we reassign the value</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> spam\n<span class=\"token string\">\"HELLO WORLD!\"</span> <span class=\"token comment\"># now it works</span>\n</code></pre>\n<p>.isalpha()\n.isdecimal() - true if it is a number\n.isspace() - true if it contains spaces\n.isalum() - true if is alpha numeric\n.istitle() - true if all starting letters have an uppercase</p>\n<p>.startswith(param)\n.endswith(param)\n.join() ex:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bats'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'cats,rats,bats'</span>\n</code></pre>\n<p>.split() does the opposite splits a string into a list.</p>\n<p>.rjust(total length of string) &#x26; .ljust(total length of string) &#x26; .center(total length of string)</p>\n<p>.strip() - removes white space\n.lstrip() - removes left white space\n.rstrip() - removes right white space</p>\n<p>%s - coversion specifier</p>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}