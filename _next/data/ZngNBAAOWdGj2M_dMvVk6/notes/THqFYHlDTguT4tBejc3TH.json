{"pageProps":{"note":{"id":"THqFYHlDTguT4tBejc3TH","title":"Python","desc":"Python Notes","updated":1645477664350,"created":1644000888615,"custom":{},"fname":"devnotes.python","type":"note","vault":{"fsPath":"vault"},"contentHash":"826ac20c91031c5d58b9897f2c76b5df","links":[],"anchors":{"excel-in-python":{"type":"header","text":"Excel in Python","value":"excel-in-python","line":71,"column":0,"depth":2},"pdf-in-python":{"type":"header","text":"PDF in Python","value":"pdf-in-python","line":81,"column":0,"depth":2},"word-in-python":{"type":"header","text":"Word in Python","value":"word-in-python","line":96,"column":0,"depth":3}},"children":["cBWB21JyyUFl8uoeVoRW4","lYnkSS5QyZPtmyqM38kP8","cd1cg9uf5is0w7vq6v5nkfx","d40r117bk5ij1tf5gamvchp","k4t9eNGAI0d94nSXz2Scx","d5nvr7f85mdrbu24x9706r5"],"parent":"lcTujcWsxBfPEpzP49YbQ","data":{}},"body":"<h1 id=\"python\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#python\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Python</h1>\n<p>Documentation Site for Python</p>\n<p>Numpy, scipy, sympy PyYAML Pandas jmespath python-dateutil pytest</p>\n<p>underscore _ gets you the previous result</p>\n<p>formatted string literals - f-strings</p>\n<p>print() has some unique arguments to change its default behavior: <code>sep</code> and <code>end</code></p>\n<pre class=\"language-python\"><code class=\"language-Python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Will append a <code>/n</code> newline at the end resulting in:</p>\n<blockquote>\n<p>Hello</p>\n<p>World</p>\n</blockquote>\n<p>you can change this to on line by:</p>\n<pre class=\"language-python\"><code class=\"language-Python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>HelloWorld</p>\n</blockquote>\n<p>for an example of <code>sep</code>:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mouse\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>standard behavior is to add a space as a separator between array items:</p>\n<blockquote>\n<p>cat dog mouse</p>\n</blockquote>\n<p>you can use <code>sep</code> to change this behavior</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mouse\"</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"ABC\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>catABCdogABCmouse</p>\n</blockquote>\n<p>Mutable values are not stored in the variable just a <strong>reference</strong> to them which means that they can be cross modified ie:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> cheese <span class=\"token operator\">=</span> spam\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> cheese<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> cheese \n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> spam \n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>Immutable values such as strings or tuples cannot be modified unless they are replaced.</p>\n<p>You can also use <code>copy.deepcoopy(spam)</code> to create a new list with a new reference.</p>\n<h2 id=\"excel-in-python\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#excel-in-python\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Excel in Python</h2>\n<p>Module OpenPyXL handles .xlsx files, the command openpyxl.load_workbook(filepath) returns a Workbook object.</p>\n<p><code>get_sheet_names()</code> and <code>get_sheet_by_name()</code> will get you a Worksheet object.</p>\n<p><code>sheet[A1]</code> will get you Cell Objects</p>\n<p><code>sheet[A1],value == \"Purple\"</code></p>\n<h2 id=\"pdf-in-python\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pdf-in-python\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>PDF in Python</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> PyPDF2 <span class=\"token comment\"># is the module recommended</span>\npdfFile <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># to open PDF</span>\nreader <span class=\"token operator\">=</span> PyPDF2<span class=\"token punctuation\">.</span>PdfFileReader<span class=\"token punctuation\">(</span>pdfFile<span class=\"token punctuation\">)</span> <span class=\"token comment\"># to read PDF in PyPDF2</span>\nreader<span class=\"token punctuation\">.</span>numPages <span class=\"token comment\"># returns number of pages in PDF</span>\nreader<span class=\"token punctuation\">.</span>getPage<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># gets a page</span>\nreader<span class=\"token punctuation\">.</span>extractText<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> pageNum <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>numPages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>getPage<span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>extractText<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>PdfFileWrite()</code> is the command to write a new PDF</p>\n<h3 id=\"word-in-python\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#word-in-python\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Word in Python</h3>\n<p><code>python-docx</code></p>\n<pre class=\"language-python\"><code class=\"language-python\">pip install python<span class=\"token operator\">-</span>docx\n<span class=\"token keyword\">import</span> docx\nd <span class=\"token operator\">=</span> docx<span class=\"token punctuation\">.</span>Document<span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span>\nd<span class=\"token punctuation\">.</span>paragraphs <span class=\"token comment\"># returns a list with all the objects in a docx</span>\nd<span class=\"token punctuation\">.</span>paragraphs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#returns a paragraph object from the list</span>\nd<span class=\"token punctuation\">.</span>paragraphs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text <span class=\"token comment\"># returns the text within a single object in the list</span>\np<span class=\"token punctuation\">.</span>runs <span class=\"token comment\"># returns a list of all the run objects</span>\np<span class=\"token punctuation\">.</span>runs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text <span class=\"token comment\"># returns the text in the run object</span>\np<span class=\"token punctuation\">.</span>runs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bold <span class=\"token comment\"># returns true if the run object is bold returns \"NONE\" (not false) if its not, this works for italic, bold and underline</span>\n</code></pre>\n<p>Word documents contain paragraph and run objects for structure.</p>\n<p>A run is created every time there is a style change in the text of a document. So italics, bold, and underline.</p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/DevNotes/notes/cBWB21JyyUFl8uoeVoRW4\">Datatstructures</a></li>\n<li><a href=\"/DevNotes/notes/cd1cg9uf5is0w7vq6v5nkfx\">Debugging</a></li>\n<li><a href=\"/DevNotes/notes/d40r117bk5ij1tf5gamvchp\">Files</a></li>\n<li><a href=\"/DevNotes/notes/k4t9eNGAI0d94nSXz2Scx\">Modules</a></li>\n<li><a href=\"/DevNotes/notes/lYnkSS5QyZPtmyqM38kP8\">Python Datatypes</a></li>\n<li><a href=\"/DevNotes/notes/d5nvr7f85mdrbu24x9706r5\">Scraping</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}