{"pageProps":{"note":{"id":"d40r117bk5ij1tf5gamvchp","title":"Files","desc":"Python File Manipulation Notes","updated":1647549345007,"created":1647539055031,"custom":{},"fname":"devnotes.python.files","type":"note","vault":{"fsPath":"vault"},"contentHash":"030e7f2fd69586d4d177a0564d46337d","links":[],"anchors":{"filepaths-and-the-os-path-module":{"type":"header","text":"Filepaths and the OS Path Module","value":"filepaths-and-the-os-path-module","line":8,"column":0,"depth":2},"plaintext-files":{"type":"header","text":"Plaintext Files","value":"plaintext-files","line":46,"column":0,"depth":2},"shelve-module":{"type":"header","text":"Shelve Module","value":"shelve-module","line":52,"column":0,"depth":3},"copying-moving-and-deleting":{"type":"header","text":"Copying, Moving and Deleting","value":"copying-moving-and-deleting","line":64,"column":0,"depth":2},"walking-the-directory-tree":{"type":"header","text":"Walking the Directory Tree","value":"walking-the-directory-tree","line":87,"column":0,"depth":2}},"children":[],"parent":"THqFYHlDTguT4tBejc3TH","data":{}},"body":"<h1 id=\"files\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#files\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Files</h1>\n<h2 id=\"filepaths-and-the-os-path-module\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#filepaths-and-the-os-path-module\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Filepaths and the OS Path Module</h2>\n<p><code>os.chdir('filepath')</code> - allows you to change current working directory</p>\n<p><code>os.getcwd()</code> - gets current working directory</p>\n<p><code>os.listdir('c:\\\\folder1\\\\folder2\\\\')</code> - returns content of a directory</p>\n<p><code>os.makedirs('c:\\\\folder1\\\\folder2\\\\')</code> - creates new folders</p>\n<p><code>os.path.abspath()</code> - gets you the absolute path from a relative path</p>\n<p><code>os.path.isabs('filepath')</code> - returns true if the path in the params is absolute, false if not</p>\n<p><code>os.path.relpath('filepath1','filepath2')</code> - returns the relative path between two directories. </p>\n<p><code>os.path.dirname('c:\\\\folder1\\\\folder2\\\\spam.png')</code> - returns the directory part of the filepath</p>\n<p><code>os.path.basename('c:\\\\folder1\\\\folder2\\\\spam.png')</code> - returns the filename and type part of a filepath</p>\n<p><code>os.path.exists('c:\\\\folder1\\\\folder2\\\\spam.png')</code> -returns bool if path exists or not</p>\n<p><code>os.path.isfile('c:\\\\folder1\\\\folder2\\\\spam.png')</code> - returns bool if filepath contains a file</p>\n<p><code>os.path.isdir('c:\\\\folder1\\\\folder2\\\\spam.png')</code> - returns bool if filepath is for a directory only</p>\n<p><code>os.path.getsize('c:\\\\folder1\\\\folder2\\\\spam.png')</code> - returns filesize in bytes</p>\n<p>Example function to read filesize of all items in a folder</p>\n<pre class=\"language-python\"><code class=\"language-python\">totalSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'c:\\\\folder1\\\\folder2\\\\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'c:\\\\folder1\\\\folder2\\\\'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    totalSize <span class=\"token operator\">=</span> totalSize <span class=\"token operator\">+</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>getsize<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'c:\\\\folder1\\\\folder2\\\\'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"plaintext-files\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#plaintext-files\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Plaintext Files</h2>\n<p><code>.open('filepath', 'w' )</code> - second param can be 'a' for append, if not param is passed the file will be opened in readmode which will not allow you to write to it.</p>\n<p>need to run <code>.close()</code> after any changes to the file for them to be saved</p>\n<h3 id=\"shelve-module\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#shelve-module\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Shelve Module</h3>\n<p>You can save variables in your Python programs to binary shelf files using the shelve module. This way, your program can restore data to variables from the hard drive.</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> shelve\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> shelfFile <span class=\"token operator\">=</span> shelve<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydata'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> cats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Simon'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> shelfFile<span class=\"token punctuation\">[</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cats\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> shelfFile<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"copying-moving-and-deleting\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#copying-moving-and-deleting\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Copying, Moving and Deleting</h2>\n<p>Copy a file\n<code>shutil.copy('filepath1', 'filepath2')</code></p>\n<p>Copy all folder contents\n<code>shutil.copytree('filepath1', 'filepath2')</code></p>\n<p>Move a file (or rename a file)\n<code>shutil.move('filepath1', 'filepath2')</code></p>\n<p>Deleting files:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>unlink<span class=\"token punctuation\">(</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># delete a file</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>rmdir<span class=\"token punctuation\">(</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># delete a folder (must be empty)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> shutil\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> shutil<span class=\"token punctuation\">.</span>rmtree<span class=\"token punctuation\">(</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#deletes a folder and its content</span>\n</code></pre>\n<p>Note: send2trash is a pip module for not permanently deleting stuff.</p>\n<h2 id=\"walking-the-directory-tree\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#walking-the-directory-tree\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Walking the Directory Tree</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">for</span> folderName<span class=\"token punctuation\">,</span> subfolders<span class=\"token punctuation\">,</span> filenames <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Folder is '</span> <span class=\"token operator\">+</span> folderName<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The subfolders in '</span> <span class=\"token operator\">+</span> folderName <span class=\"token operator\">+</span> <span class=\"token string\">' are: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>subfolders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The filenames in '</span> <span class=\"token operator\">+</span> folderName <span class=\"token operator\">+</span> <span class=\"token string\">' are: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>filenames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}