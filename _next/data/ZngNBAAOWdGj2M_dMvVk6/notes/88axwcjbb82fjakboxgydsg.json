{"pageProps":{"note":{"id":"88axwcjbb82fjakboxgydsg","title":"Callback Functions","desc":"Notes on Callback Functions","updated":1649272239514,"created":1648944376567,"custom":{},"fname":"devnotes.javascript.callbacks","type":"note","vault":{"fsPath":"vault"},"contentHash":"4908665d20cc552540e0b0fa9ffa8208","links":[],"anchors":{"general-info":{"type":"header","text":"General Info","value":"general-info","line":7,"column":0,"depth":2},"callback-hell":{"type":"header","text":"Callback Hell","value":"callback-hell","line":17,"column":0,"depth":2},"tips-to-fix-callback-hell":{"type":"header","text":"Tips to Fix Callback Hell","value":"tips-to-fix-callback-hell","line":46,"column":0,"depth":3},"example-of-nodejs-callback-with-fs":{"type":"header","text":"Example of NodeJS CallBack With FS","value":"example-of-nodejs-callback-with-fs","line":112,"column":0,"depth":3},"function-definition-not-function-call":{"type":"header","text":"Function Definition not Function Call","value":"function-definition-not-function-call","line":140,"column":0,"depth":2}},"children":[],"parent":"cOSLT6ncEiScjLx1bEQKH","data":{}},"body":"<h1 id=\"callback-functions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#callback-functions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Callback Functions</h1>\n<h2 id=\"general-info\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#general-info\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>General Info</h2>\n<p>A simple callback function in an event handler:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">myDiv<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"callback-hell\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#callback-hell\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Callback Hell</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readdir</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error finding files: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n    files<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">filename<span class=\"token punctuation\">,</span> fileIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">gm</span><span class=\"token punctuation\">(</span>source <span class=\"token operator\">+</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">size</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> values</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error identifying file size: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>filename <span class=\"token operator\">+</span> <span class=\"token string\">' : '</span> <span class=\"token operator\">+</span> values<span class=\"token punctuation\">)</span>\n          aspect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span> <span class=\"token operator\">/</span> values<span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span><span class=\"token punctuation\">)</span>\n          widths<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">width<span class=\"token punctuation\">,</span> widthIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            height <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">round</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">/</span> aspect<span class=\"token punctuation\">)</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resizing '</span> <span class=\"token operator\">+</span> filename <span class=\"token operator\">+</span> <span class=\"token string\">'to '</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">+</span> height<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resize</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">write</span><span class=\"token punctuation\">(</span>dest <span class=\"token operator\">+</span> <span class=\"token string\">'w'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'_'</span> <span class=\"token operator\">+</span> filename<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error writing file: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"tips-to-fix-callback-hell\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#tips-to-fix-callback-hell\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Tips to Fix Callback Hell</h3>\n<ol>\n<li>\n<p>Keep your code shallow</p>\n<p>Instead of this:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span>\nform<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onsubmit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">submitEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">uri</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://example.com/upload\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> name<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> body</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> statusMessage <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.status'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> statusMessage<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> err\n    statusMessage<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> body\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>do this:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">onsubmit</span> <span class=\"token operator\">=</span> formSubmit\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">formSubmit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">submitEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">uri</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://example.com/upload\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> name<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> postResponse<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">postResponse</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> body</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> statusMessage <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.status'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> statusMessage<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> err\nstatusMessage<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> body\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>Modularize</p>\n<p>Write small modules that each do one thing, and assemble them into other modules that do a bigger thing. You can't get into callback hell if you don't go there.</p>\n</li>\n<li>\n<p>Handle Every Single Error</p>\n<p>There are different types of errors: syntax errors caused by the programmer (usually caught when you try to first run the program), runtime errors caused by the programmer (the code ran but had a bug that caused something to mess up), platform errors caused by things like invalid file permissions, hard drive failure, no network connection etc. This section is only meant to address this last class of errors.</p>\n<p>The first two rules are primarily about making your code readable, but this one is about making your code stable. When dealing with callbacks you are by definition dealing with tasks that get dispatched, go off and do something in the background, and then complete successfully or abort due to failure. Any experienced developer will tell you that you can never know when these errors happen, so you have to plan on them always happening.</p>\n<p>With callbacks the most popular way to handle errors is the Node.js style where the first argument to the callback is always reserved for an error.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Does/not/exist'</span><span class=\"token punctuation\">,</span> handleFile<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleFile</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Uhoh, there was an error'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// otherwise, continue on and use `file` in your code</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n</ol>\n<h3 id=\"example-of-nodejs-callback-with-fs\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example-of-nodejs-callback-with-fs\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example of NodeJS CallBack With FS</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> myNumber <span class=\"token operator\">=</span> <span class=\"token keyword nil\">undefined</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addOne</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'number.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">doneReading</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> fileContents</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    myNumber <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>fileContents<span class=\"token punctuation\">)</span>\n    myNumber<span class=\"token operator\">++</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logMyNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>myNumber<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addOne</span><span class=\"token punctuation\">(</span>logMyNumber<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>To break down this example even more, here is a timeline of events that happen when we run this program:</p>\n<ol>\n<li>The code is parsed, which means if there are any syntax errors they would make the program break. During this initial phase, fs and myNumber are declared as variables while addOne and logMyNumber are declared as functions. Note that these are just declarations. Neither function has been called nor invoked yet.</li>\n<li>When the last line of our program gets executed addOne is invoked with the logMyNumber function passed as its callback argument. Invoking addOne will first run the asynchronous fs.readFile function. This part of the program takes a while to finish.</li>\n<li>With nothing to do, node idles for a bit as it waits for readFile to finish. If there was anything else to do during this time, node would be available for work.</li>\n<li>As soon as readFile finishes it executes its callback, doneReading, which parses fileContents for an integer called myNumber, increments myNumber and then immediately invokes the function that addOne passed in (its callback), logMyNumber.</li>\n</ol>\n<h2 id=\"function-definition-not-function-call\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#function-definition-not-function-call\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Function Definition not Function Call</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">firstName<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My name is \"</span> <span class=\"token operator\">+</span> firstName <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// NOT</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">firstName<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My name is \"</span> <span class=\"token operator\">+</span> firstName <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>We are passing the function definition, not the function call. This prevents the callback from being executed immediately, which is not the idea behind the callbacks.</p>\n<p>The callback can be an existing function as shown in the preceding example, or it can be an anonymous function, which we create when we call the higher-order function, as shown in the following example:</p>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"cf4622cd4e7841f93fb3051e6203c8e6","links":[],"anchors":{},"children":["uRNDWirv66xgHSdrPwMcw","lcTujcWsxBfPEpzP49YbQ","FTV8hEHhyid0DiEvv9gNj","ph4ta0hoi7x0vch4uoz72hn","boufkx25rro7ysodpanan5g","01u0co3RYjOM1bjpc2qIU","xt9womgr90xi5ui5nezev7b","qpngd6ap92mmahr4bh4gc47","hobifg8vvmmg17kt2z5p36a"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.88.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevNotes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://rperez2021.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","enableTaskNotes":true}}},"__N_SSG":true}